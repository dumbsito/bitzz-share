{"version":3,"file":"index.js","sources":["../dist-src/auth.js","../dist-src/hook.js","../dist-src/index.js"],"sourcesContent":["export async function auth(token) {\n    const tokenType = /^v\\d+\\./.test(token) ? \"installation\" : \"oauth\";\n    return {\n        type: \"token\",\n        token: token,\n        tokenType\n    };\n}\n","export async function hook(token, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    endpoint.headers.authorization = `token ${token}`;\n    return request(endpoint);\n}\n","import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport function createTokenAuth(token) {\n    if (!token) {\n        throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n    }\n    if (typeof token !== \"string\") {\n        throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n    }\n    return Object.assign(auth.bind(null, token), {\n        hook: hook.bind(null, token)\n    });\n}\n"],"names":["auth","token","tokenType","test","type","hook","request","route","parameters","endpoint","merge","headers","authorization","createTokenAuth","Error","Object","assign","bind"],"mappings":";;;;AAAO,eAAeA,IAAf,CAAoBC,KAApB,EAA2B;QACxBC,SAAS,GAAG,UAAUC,IAAV,CAAeF,KAAf,IAAwB,cAAxB,GAAyC,OAA3D;SACO;IACHG,IAAI,EAAE,OADH;IAEHH,KAAK,EAAEA,KAFJ;IAGHC;GAHJ;;;ACFG,eAAeG,IAAf,CAAoBJ,KAApB,EAA2BK,OAA3B,EAAoCC,KAApC,EAA2CC,UAA3C,EAAuD;QACpDC,QAAQ,GAAGH,OAAO,CAACG,QAAR,CAAiBC,KAAjB,CAAuBH,KAAvB,EAA8BC,UAA9B,CAAjB;EACAC,QAAQ,CAACE,OAAT,CAAiBC,aAAjB,GAAkC,SAAQX,KAAM,EAAhD;SACOK,OAAO,CAACG,QAAD,CAAd;;;ACDG,SAASI,eAAT,CAAyBZ,KAAzB,EAAgC;MAC/B,CAACA,KAAL,EAAY;UACF,IAAIa,KAAJ,CAAU,0DAAV,CAAN;;;MAEA,OAAOb,KAAP,KAAiB,QAArB,EAA+B;UACrB,IAAIa,KAAJ,CAAU,uEAAV,CAAN;;;SAEGC,MAAM,CAACC,MAAP,CAAchB,IAAI,CAACiB,IAAL,CAAU,IAAV,EAAgBhB,KAAhB,CAAd,EAAsC;IACzCI,IAAI,EAAEA,IAAI,CAACY,IAAL,CAAU,IAAV,EAAgBhB,KAAhB;GADH,CAAP;;;;;"}